
apiVersion: v1
kind: Service
metadata:
  name: user-service
  namespace: {{ .Values.namespace }}
#  labels:
#    app: user-app
spec:
  selector:
    app: user-pod
  ports:
    - protocol: "TCP"
      port: 8080
      targetPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-pod
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: user-pod
  replicas: 1
  template:
    metadata:
      labels:
        app: user-pod
        owner: pamdmitriyshumskiy
    spec:
      containers:
        - name: user-container
          image: pamdmitriyshumskiy/kuber_user:3.0.0
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              httpHeaders:
                - name: Custom-Header
                  value: Awesome
            initialDelaySeconds: 25
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8080
              httpHeaders:
                - name: Custom-Header
                  value: Awesome
            initialDelaySeconds: 25
            periodSeconds: 60
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf
                  key: user-host
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf
                  key: user-name
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: postgres_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: postgres_password